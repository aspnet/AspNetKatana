<Project>

  <PropertyGroup>
    <GitHubRepositoryName>aspnetkatana</GitHubRepositoryName>
    <SourceBuildManagedOnly>true</SourceBuildManagedOnly>
  </PropertyGroup>

  <Import Project="TargetFrameworkDefaults.props" />

  <!--
    Some MSBuild files in this repo are copied as-is into the outputs, and contain hard-coded target
    framework names. For the Microsoft build, the target framework rarely (never?) changes, so it
    hasn't been a maintenance problem. However, it is a problem for source-build, where the TFM
    needs to match the target/latest SDK (5.0, 6.0, ...). This target simply replaces the content of
    the files. This is similar to a patch, but a little more resistant to merge conflicts.

    This target should be removed, and the files should be generated by a template instead. Source
    files should not be made dirty (according to Git) by running a build. This is partially
    mitigated by the arcade-powered source-build tooling running the build in an isolated clone of
    the repo rather than in the dev's copy.
  -->
  <Target Name="ModifyHardCodedTargetFrameworkReferencesInToolMSBuildFiles"
          Condition="
            '$(ArcadeBuildFromSource)' == 'true' and
            '$(ArcadeInnerBuildFromSource)' == 'true'"
          BeforeTargets="Execute">
    <ItemGroup>
      <ToolMSBuildFileUsingTargetFramework Include="
        $(RepoRoot)src/Microsoft.DotNet.Arcade.Sdk/tools/BuildTasks.props;
        $(RepoRoot)src/Microsoft.DotNet.Build.Tasks.Installers/build/Microsoft.DotNet.Build.Tasks.Installers.props;
        $(RepoRoot)src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.common.targets;
        $(RepoRoot)src/Microsoft.DotNet.Build.Tasks.TargetFramework/src/build/Microsoft.DotNet.Build.Tasks.TargetFramework.props;
        $(RepoRoot)src/Microsoft.DotNet.GenFacades/build/Microsoft.DotNet.GenFacades.targets;
        $(RepoRoot)src/Microsoft.DotNet.SourceBuild/tasks/build/Microsoft.DotNet.SourceBuild.Tasks.props" />
    </ItemGroup>

    <Exec
      Command="sed -i 's/netcoreapp3.1/$(TargetFrameworkForNETSDK)/g' '%(ToolMSBuildFileUsingTargetFramework.FullPath)'"
      WorkingDirectory="$(RepoRoot)"
      Condition="'@(ToolMSBuildFileUsingTargetFramework)' != ''" />
  </Target>

</Project>
