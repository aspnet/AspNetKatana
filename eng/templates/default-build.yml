jobs:
- ${{ if eq(variables['System.TeamProject'], 'internal') }}: 
  - template: /eng/common/templates-official/jobs/jobs.yml@self
    parameters:
      enableMicrobuild: true
      enablePublishBuildArtifacts: true
      enablePublishTestResults: true
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
      enableTelemetry: true
      mergeTestResults: true
      jobs:
      - job: Windows
        variables:
        # Only enable publishing in official builds.
        - ${{ if notin(variables['Build.Reason'], 'PullRequest') }}:
          # Publish-Build-Assets provides: MaestroAccessToken, BotAccount-dotnet-maestro-bot-PAT
          - group: Publish-Build-Assets
          - name: _OfficialBuildArgs
            value: /p:DotNetSignType=$(_SignType)
                   /p:TeamName=$(_TeamName)
                   /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                   /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
          - name: _SignType
            value: real
        # else
        - ${{ else }}:
          - name: _OfficialBuildArgs
            value: ''
          - name: _SignType
            value: test

        steps:
        - checkout: self
          clean: true
        - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine $(_OfficialBuildArgs)
          displayName: Build and Publish
        - task: 1ES.PublishPipelineArtifact@1
          inputs:
            path: $(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)/
            artifact: drop
        - task: 1ES.PublishPipelineArtifact@1
          condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
          inputs:
            path: $(Build.SourcesDirectory)/artifacts/packages
            artifact: drop

- ${{ if ne(variables['System.TeamProject'], 'internal') }}: 
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: true
      enablePublishBuildArtifacts: true
      enablePublishTestResults: true
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
      enableTelemetry: true
      mergeTestResults: true
      jobs:
      - job: Windows
        pool:
          name: NetCore-Svc-Public
          image: 1es-windows-2019
        variables:
        - name: _OfficialBuildArgs
          value: ''
        - name: _SignType
          value: test

        steps:
        - checkout: self
          clean: true
        - script: eng\common\cibuild.cmd -configuration $(_BuildConfig) -prepareMachine $(_OfficialBuildArgs)
          displayName: Build and Publish
        - task: PublishBuildArtifacts@1
          displayName: Upload TestResults
          condition: always()
          continueOnError: true
          inputs:
            pathtoPublish: artifacts/TestResults/$(_BuildConfig)/
            artifactName: $(Agent.Os)_$(Agent.JobName) TestResults
            artifactType: Container
            parallel: true
        - task: PublishBuildArtifacts@1
          displayName: Upload package artifacts
          condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
          inputs:
            pathtoPublish: artifacts/packages/
            artifactName: artifacts
            artifactType: Container
            parallel: true